# -*- mode: conf -*-
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

exec xrdb ~/.Xresources			# load urxvt customisations
exec sh ~/.profile                      # load environment variables

# Your preferred terminal emulator
set $term alacritty
## get colours/bg from pywal
include "$HOME/.cache/wal/colors-sway"
client.focused $color0 $color9 $foreground $color7 $color7
client.focused_inactive $color0 $background $foreground $color7 $color7

# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
# set $menu dmenu_path | rofi -dmenu | xargs swaymsg exec --
set $menu wofi --show drun --allow-images --allow-markup --color=/home/japhir/.cache/wal/colors-rofi-dark.rasi swaymsg exec --

### Output configuration

# Default wallpaper (more resolutions are available in __DATADIR__/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill

# main laptop screen
output eDP-1 {
       background $wallpaper fill
       resolution 1920x1080
       position 1920 10
}
# HDMI screen at office above laptop
output HDMI-A-2 {
       background $wallpaper fill
       resolution 1920x1080
       position 0 0
}
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
# default keyboard settings
input "*" {
      xkb_layout us
      xkb_options ctrl:nocaps,compose:ralt
      xkb_numlock enabled
}
# laptop touchpad
input "2:7:SynPS/2_Synaptics_TouchPad" {
      # touchpad settings
      dwt enabled
      tap enabled
      natural_scroll enabled
      middle_emulation enabled
      pointer_accel 0.5
}
# tablet should have some slower accelleration because it's bigger
input "1386:209:Wacom_Bamboo_2FG_4x5_Pad" {
      pointer_accel 0.9
      tap enabled
      natural_scroll enabled
}
# input "1386:209:Wacom_Bamboo_2FG_4x5_Pen" {
#     # attempts at getting the buttons to remap to MMB and RMB
#     #scroll_button 331
#     #middle_emulation enabled
# }
#
# hide the cursor after a while
# seat seat0 hide_cursor 1500
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec $term

    # kill focused window
    bindsym $mod+Shift+q kill

    # start your launcher
    bindsym $mod+d exec $menu

    # reload the configuration file
    bindsym $mod+Shift+c reload

    # exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left 30
    bindsym $mod+Shift+$down move down 30
    bindsym $mod+Shift+$up move up 30
    bindsym $mod+Shift+$right move right 30
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left 30
    bindsym $mod+Shift+Down move down 30
    bindsym $mod+Shift+Up move up 30
    bindsym $mod+Shift+Right move right 30
#
# Workspaces:
#
# workspace gaps
set $ws1 "1:term"
set $ws2 "2:web"
set $ws3 "3:emacs"
set $ws4 "4:refs"
set $ws5 "5:slack"
set $ws6 "6:inkscape"
set $ws7 "7:vid"
set $ws8 "8:windows"
set $ws9 "9:graphs"
set $ws10 "10:spotify"

# assign workspaces to screens
workspace $ws1 output $smallscreen
workspace $ws2 output $bigscreen
workspace $ws3 output $bigscreen
workspace $ws4 output $bigscreen
workspace $ws7 output $bigscreen
workspace $ws9 output $smallscreen
workspace $ws10 output $smallscreen

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# switch to previous workspace by repeatedly tapping
workspace_auto_back_and_forth yes

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

### move programs to specific workspaces ###
assign [class="^Mendeley Desktop$"] $ws4
assign [class="^Zotero$"] $ws4
assign [class="^Slack$"] $ws5
assign [class="^Riot$"] $ws5
assign [class="^Trello$"] $ws5
assign [class="^Inkscape$"] $ws6
assign [class="^VirtualBox$" title="^Win10"] $ws8
assign [class="R_x11"] $ws9
# doesn't work because of long-standing spotify bug
#assign [class="Spotify"] $ws10
for_window [class="Spotify"] move container to workspace $ws10

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    # bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    # bindsym $mod+s layout stacking  # I never use stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent

    # make current window sticky
    bindsym $mod+Shift+s sticky toggle
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
## resize window (you can also use the mouse on a border or $mod + RMB)
bindsym $mod+Shift+y resize shrink width  20 px or 20 ppt
bindsym $mod+Shift+u resize grow   height 20 px or 20 ppt
bindsym $mod+Shift+i resize shrink height 20 px or 20 ppt
bindsym $mod+Shift+o resize grow   width  20 px or 20 ppt

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# media keys
# Increase volume
bindsym XF86AudioRaiseVolume exec "amixer set Master 2%+ && volnoti-show $(amixer get Master | grep -Po '[0-9]+(?=%)' | head -1)"
bindsym XF86AudioLowerVolume exec "amixer set Master 2%- && volnoti-show $(amixer get Master | grep -Po '[0-9]+(?=%)' | head -1)"
bindsym --locked XF86AudioMute exec "amixer set Master toggle && if amixer get Master | grep -Fq '[off]'; then volnoti-show -m; else volnoti-show $(amixer get Master | grep -Po '[0-9]+(?=%)' | head -1); fi"
# Suspend also locks
bindsym XF86Sleep             exec "systemctl suspend"
bindsym --locked XF86AudioPlay         exec playerctl play-pause
#bindsym XF86AudioPause        exec playerctl pause
bindsym XF86AudioNext         exec playerctl next
bindsym XF86AudioPrev         exec playerctl previous
bindsym XF86AudioMicMute      exec amixer set Capture toggle
bindsym XF86MonBrightnessDown exec brightnessctl set 10%-
bindsym XF86MonBrightnessUp   exec brightnessctl set +10%
# bindsym XF86Display           exec arandr
bindsym XF86WLAN              exec sudo systemctl restart NetworkManager
# bindsym XF86Tools             exec lxappearance
bindsym XF86Bluetooth         exec bluetooth toggle

# lock screen
bindsym $mod+Delete exec swaylock -c 000000

# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.

# see below for exec waybar
# bar {
   # swaybar_command waybar
   # mode hide
   # position top
#     # TODO: battery icon, processor/memory overview
#     # WAITING: tray icons
#     # mode hide
#     # When the status_command prints a new line to stdout, swaybar updates.
   # status_command SCRIPT_DIR=~/.config/i3blocks i3blocks
   # font pango:Source Code Pro, Font Awesome 5 Free, Font Awesome 5 Brands 10
#    colors {
# 	background $background
# 	statusline $foreground
# 	# focused_background $color1
# 	# focused_statusline $color14
# 	focused_workspace $color0 $color2 $color15
# 	active_workspace $color0 $color3 $foreground
# 	inactive_workspace $color0 $background $foreground
# 	urgent_workspace $color0 $color13 $color0
#     }
# }

# launch
# keybinding        software                                        mnemonic(ish?)
bindsym $mod+b exec firefox                                       # firefox browser
bindsym $mod+x exec nautilus                                      # xxx file manager
bindsym $mod+m exec emacsclient -c -n -e '(switch-to-buffer nil)' # emacs
bindsym $mod+i exec inkscape
bindsym $mod+s exec slack                                         # slack messages
bindsym $mod+o exec libreoffice                                   # office
bindsym $mod+p exec spotify                                       # music

bindsym Print exec grim ~/Pictures/Screenshots/$(date +'%F-%T.png')
bindsym --release Shift+Print exec slurp | grim -g - -c ~/Pictures/Screenshots/$(date +'%F-%T_region.png')

exec redshift -l 52.1:5.12 -m wayland -t 5500:2500
exec flashfocus           # highlight focused screen
exec mako                  # notification daemon
exec volnoti               # volume change notification
exec pactl                 # pulseaudio volume control, manage with pamixer
exec blueman-applet        # bluetooth status applet
# exec nextcloud
exec owncloud
exec nm-applet --indicator # network-manager-applet-indicator from AUR

# gaps
smart_gaps on
default_border pixel 1
hide_edge_borders both
gaps inner 15
gaps outer 15

# modify gaps
bindsym $mod+Shift+t gaps inner current set 15; gaps outer current set 15
# bindsym $mod+s       gaps inner current plus 5
# bindsym $mod+Shift+s gaps inner current minus 5
bindsym $mod+Shift+d gaps inner current set 0; gaps outer current set 0
bindsym $mod+z       gaps outer current plus 5
bindsym $mod+Shift+z gaps outer current minus 5

# inhibit swayidle in fullscreen ff
# xwayland version
for_window [class="Firefox"] inhibit_idle fullscreen
for_window [class="popcorntime"] inhibit_idle fullscreen
# wayland vesion
for_window [app_id="firefox"] inhibit_idle fullscreen

for_window [class="^URxvt"] opacity 0.7

# for_window [class="^Emacs$"] opacity 0.95

# add X or wayland session to title
for_window [shell=".*"] title_format "%title :: %shell"

exec waybar  # moved to end so the rest of the stuff can launch first

include /etc/sway/config.d/*