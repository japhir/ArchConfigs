# Ashell log level filter, possible values "debug" | "info" | "warn" | "error". Needs reload
log_level = "warn"
# Possible status bar outputs, values could be: All, Active, or a list of outputs
# All: the status bar will be displayed on all the available outputs, example: outputs = "All"
# active: the status bar will be displayed on the active output, example: outputs = "Active"
# list of outputs: the status bar will be displayed on the outputs listed here, example: outputs = { targets = ["DP-1", "eDP-1"] }
# if the outputs is not available the bar will be displayed in the active output
outputs = "All"
# Bar position, possible values Top | Bottom.
position = "Top"
# App launcher command, it will be used to open the launcher,
# without a value the related button will not appear
# optional, default None
app_launcher_cmd = "wofi --show drun --allow-images --allow-markup"
# Clipboard command, it will be used to open the clipboard menu,
# without a value the related button will not appear
# optional, default None
# clipboard_cmd = "cliphist-rofi-img | wl-copy"
# Maximum number of chars that can be present in the window title
# after that the title will be truncated
# optional, default 150
# truncate_title_after_length = 150

# Declare which modules should be used and in which position in the status bar.
# This is the list of all possible modules
#  - AppLauncher
#  - Updates
#  - Clipboard
#  - Workspaces
#  - WindowTitle
#  - SystemInfo
#  - KeyboardLayout
#  - KeyboardSubmap
#  - Tray
#  - Clock
#  - Privacy
#  - MediaPlayer
#  - Settings
# optional, the following is the default configuration
[modules]
# The modules that will be displayed on the left side of the status bar
left = [ "AppLauncher", "Workspaces", "WindowTitle" ]
# The modules that will be displayed in the center of the status bar
center = [ "FuzzyClock" ]
# MediaPlayer?
# The modules that will be displayed on the right side of the status bar
# The nested modules array will form a group sharing the same element in the status bar
# You can also use custom modules to extend the normal set of options, see configuration below
right = [ "Clock", "SystemInfo", "Tray",
          [ "Privacy", "Settings" ],
	 "Updates", "CustomNotifications" ]

# Update module configuration.
# Without a value the related button will not appear.
# optional, default None
[updates]
# The check command will be used to retrieve the update list.
# It should return something like `package_name version_from -> version_to\n`
check_cmd = "checkupdates; paru -Qua"
# The update command is used to init the OS update process
update_cmd = 'foot -e bash -c "paru; echo Done - Press enter to exit; read" &'

# Workspaces module configuration, optional
[workspaces]
# The visibility mode of the workspaces, possible values are:
# All: all the workspaces will be displayed
# MonitorSpecific: only the workspaces of the related monitor will be displayed
# optional, default All
visibility_mode = "MonitorSpecific"

# Enable filling with empty workspaces
# For example:
# With this flag set to true if there are only 2 workspaces,
# the workspace 1 and the workspace 4, the module will show also
# two more workspaces, the workspace 2 and the workspace 3
# optional, default false
# enable_workspace_filling = false

# If you want to see more workspaces prefilled, set the number here:
# max_workspaces = 6
# In addition to the 4 workspaces described above it will also show workspaces 5 and 6
# Only works with `enable_workspace_filling = true`

# keyboardLayout module configuration
# optional
# Maps layout names to arbitrary labels, which can be any text, including unicode symbols as shown below
# If using Hyprland the names can be found in `hyprctl devices | grep "active keymap"`
# [keyboard_layout.labels]
# "English (US)" = "üá∫üá∏"
# "Russian" = "üá∑üá∫"

# The system module configuration
# optional
[system]
# System information shown in the status bar
# The possible values are:
#  - Cpu
#  - Memory
#  - MemorySwap
#  - Temperature
#  - { disk = "path" }
#  - IpAddress
#  - DownloadSpeed
#  - UploadSpeed
# optional, the following is the default configuration
# If for example you want to dispay the usage of the root and home partition
# you can use the following configuration
# systemInfo = [ { disk = "/" }, { disk = "/home" } ]
indicators = [ "Cpu", "Memory", "Temperature" ]

# CPU indicator thresholds
# optional
[system.cpu]
# cpu indicator warning level (default 60)
warn_threshold = 60
# cpu indicator alert level (default 80)
alert_threshold = 80

# Memory indicator thresholds
# optional
[system.memory]
# mem indicator warning level (default 70)
warn_threshold = 70
# mem indicator alert level (default 85)
alert_threshold = 85

# Memory swap indicator thresholds
# optional
[system.temperature]
# temperature indicator warning level (default 60)
warn_threshold = 60
# temperature indicator alert level (default 80)
alert_threshold = 80

# Disk indicator thresholds
# optional
[system.disk]
# disk indicator warning level (default 80)
warn_threshold = 80
# disk indicator alert level (default 90)
alert_threshold = 90

# Clock module configuration
[clock]
# clock format see: https://docs.rs/chrono/latest/chrono/format/strftime/index.html
# format = "%a %d %b %R"
format = "%F %a"

# Media player module configuration
[media_player]
# optional, default 100
max_title_length = 80

# Custom modules configuration (you can have multiple)
[[CustomModule]]
# The name will link the module in your left/center/right definition
name = "CustomNotifications"
# The default icon for this custom module
icon = "ÔÇ¢"
# The command that will be executed on click
command = "swaync-client -t -sw"
# You can optionally configure your custom module to update the UI using another command
# The output right now follows the waybar json-style output, using the `alt` and `text` field
# E.g. `{"text": "3", "alt": "notification"}`
listen_cmd = "swaync-client -swb"
# You can define behavior for the `text` and `alt` fields
# Any number of regex can be used to change the icon based on the alt field
icons.'dnd.*' = "Ôá∑"
# Another regex can optionally show a red "alert" dot on the icon
alert = ".*notification"

[[CustomModule]]
name = "FuzzyClock"
command = ""
icon = "üïì"
listen_cmd = 'echo {\"text\": \"$(fuzzy_clock)\", \"alt\": \"$(date +%R)\"}'
icons.'(11:4[56789])|(11:5.)|(12:[01].)|(12:1[01234])' = "üïõ"
icons.'(12:1[56789])|(12:[234]).|(12:4[0-4])' = "üïß"
icons.'(12:4[56789])|(12:5.)|(13:[01].)|(13:1[01234])' = "üïê"
icons.'(13:1[56789])|(13:[234]).|(13:4[0-4])' = "üïú"
# üïë # 2
# üïù # 2:30
# üïí # 3
# üïû # 3:30
# üïì # 4
# üïü # 4:30
# üïî # 5
# üï† # 5:30
# üïï # 6
# üï° # 6:30
# üïñ # 7
# üï¢ # 7:30

# Settings module configuration
[settings]
# command used for lock the system
# without a value the related button will not appear
# optional, default None
lock_cmd = "hyprlock &"
# command used to open the sinks audio settings
# without a value the related button will not appear
# optional default None
audio_sinks_more_cmd = "pavucontrol -t 3"
# command used to open the sources audio settings
# without a value the related button will not appear
# optional, default None
audio_sources_more_cmd = "pavucontrol -t 4"
# command used to open the network settings
# without a value the related button will not appear
# optional, default None
wifi_more_cmd = "nm-connection-editor"
# command used to open the VPN settings
# without a value the related button will not appear
# optional, default None
vpn_more_cmd = "nm-connection-editor"
# command used to open the Bluetooth settings
# without a value the related button will not appear
# optional, default None
bluetooth_more_cmd = "blueman-manager"

# Appearance config
# Each color could be a simple hex color like #228800 or an
# object that define a base hex color and two optional variant of that color (a strong one and a weak one)
# and the text color that should be used with that base color
# example:
# [appearance.background_color]
# base = "#448877"
# strong = "#448888" # optional default autogenerated from base color
# weak = "#448855" # optional default autogenarated from base color
# text = "#ffffff" # optional default base text color
[appearance]
# optional, default iced.rs font
# font_name = "Comic Sans MS"
# The style of the main bar, possible values are: Islands | Solid | Gradient
# optional, default Islands
style = "Islands"
# The opacity of the main bar, possible values are: 0.0 to 1.0
# optional, default 1.0
# opacity = 0.7
# used as a base background color for header module button
# background_color = "#1e1e2e"
# used as a accent color
# primary_color = "#fab387"
# used for darker background color
# secondary_color = "#11111b"
# used for success message or happy state
# success_color = "#a6e3a1"
# used for danger message or danger state (the weak version is used for the warning state
# danger_color = "#f38ba8"
# base default text color
# text_color = "#f38ba8"
# this is a list of color that will be used in the workspace module (one color for each monitor)
# workspace_colors = [ "#fab387", "#b4befe" ]
# this is a list of color that will be used in the workspace module
# for the special workspace (one color for each monitor)
# optional, default None
# without a value the workspaceColors list will be used
# special_workspace_colors = [ "#a6e3a1", "#f38ba8" ]

# menu options
[appearance.menu]
# The opacity of the menu, possible values are: 0.0 to 1.0
# optional, default 1.0
# opacity = 0.7
# The backdrop of the menu, possible values are: 0.0 to 1.0
# optional, default 0.0
# backdrop = 0.3