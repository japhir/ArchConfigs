# -*- mode: conf -*-
# Read `man 5 sway` for a complete reference.

# The file we include below is created and will be overwritten by nwg-shell-config GUI!
include ~/.config/sway/variables
include ~/.config/sway/mediakeys
include ~/.config/sway/inputs
include ~/.config/sway/outputs
include ~/.config/sway/autostart
include ~/.config/sway/workspaces
include ~/.config/sway/software_workspaces
# i've tweaked them manually.

# load urxvt customisations moved them over to ~/.Xdefaults, which should be loaded automatically
exec /usr/bin/xrdb /home/jahir/.Xresources
# load environment variables
exec sh ~/.profile
seat seat0 xcursor_theme Yaru 24

## get colours/bg from pywal -> nope I now use the Ubuntu theme!
# include "$HOME/.cache/wal/colors-sway"
# client.focused $color0 $color9 $foreground $color7 $color7
# ubuntu orange with dark border and light text: border bg text
client.focused #222222 #df4a16 #f7f7f7
client.focused_inactive #222222 #515151 #f7f7f7
client.unfocused #222222 #2c2c2c #848484

exec_always import-gsettings \
    gtk-theme:gtk-theme-name \
    icon-theme:gtk-icon-theme-name \
    cursor-theme:gtk-cursor-theme-name

# Your preferred application launcher
# Note: it is recommended that you pass the final command to sway
# set $menu dmenu_path | rofi -dmenu | xargs swaymsg exec --
set $menu wofi --show drun --allow-images --allow-markup swaymsg exec --
# --color=/home/japhir/.cache/wal/colors-rofi-dark.rasi
### Idle configuration
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 900 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# hide the cursor after a while
# seat seat0 hide_cursor 1500
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec $term

    # kill focused window
    bindsym $mod+Shift+q kill

    # start your launcher
    bindsym $mod+d exec $menu

    # reload the configuration file
    bindsym $mod+Shift+c reload

    # exit sway (logs you out of your Wayland session)
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b
    # 'Yes, exit sway' 'swaymsg exit'
    bindsym $mod+Shift+e exec $exit
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left 30
    bindsym $mod+Shift+$down move down 30
    bindsym $mod+Shift+$up move up 30
    bindsym $mod+Shift+$right move right 30
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left 30
    bindsym $mod+Shift+Down move down 30
    bindsym $mod+Shift+Up move up 30
    bindsym $mod+Shift+Right move right 30

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    # bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    # bindsym $mod+s layout stacking  # I never use stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle
    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent

    # make current window sticky
    bindsym $mod+Shift+s sticky toggle
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
## resize window (you can also use the mouse on a border or $mod + RMB)
bindsym $mod+Shift+y resize shrink width  20 px or 20 ppt
bindsym $mod+Shift+u resize grow   height 20 px or 20 ppt
bindsym $mod+Shift+i resize shrink height 20 px or 20 ppt
bindsym $mod+Shift+o resize grow   width  20 px or 20 ppt

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# lock screen
bindsym $mod+Shift+Delete exec systemctl suspend && swaylock -c 000000
bindsym $mod+Delete exec swaylock -c 000000

# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.

# bar {
#    swaybar_command waybar
# }

# launch software with key binding
# keybinding        software                                      mnemonic(ish?)
bindsym $mod+b exec $browser                                      # browser
bindsym $mod+x exec $filemanager                                  # gnome files
bindsym $mod+i exec inkscape
bindsym $mod+o exec libreoffice                                   # office
bindsym $mod+s exec $music                                        # music
bindsym $mod+m exec $editor                                       # eMacs
bindsym $mod+c exec emacsclient -e '(make-capture-frame)'         # Capture from anywhere
for_window [title="capture"] floating enable

for_window [title="^zoom$"] floating enable

# add the webcam screen for video recording
bindsym $mod+Shift+w exec mpv --no-osc --demuxer-lavf-format=video4linux2 --demuxer-lavf-o-set=input_format=mjpeg av://v4l2:/dev/video0 || notify-send "failed to start webcam"
for_window [title="^video0 - mpv$"] floating enable, sticky enable, resize set height 260 px, move absolute position 0 px 820 px, border none
for_window [title="Firefox â€” Sharing Indicator$"] floating enable, resize set height 16 px, move absolute position 0 px 820 px, border none
for_window [title="Picture-in-Picture"] floating enable

bindsym Print exec grim ~/Pictures/Screenshots/$(date +'%F-%T.png')
bindsym --release Shift+Print exec slurp | grim -g - -c ~/Pictures/Screenshots/$(date +'%F-%T_region.png')

# gaps
smart_gaps on
default_border pixel 1
hide_edge_borders both
gaps inner 15
gaps outer 15

# modify gaps
bindsym $mod+Shift+t gaps inner current set 15; gaps outer current set 15
# bindsym $mod+s       gaps inner current plus 5
# bindsym $mod+Shift+s gaps inner current minus 5
bindsym $mod+Shift+d gaps inner current set 0; gaps outer current set 0
bindsym $mod+z       gaps outer current plus 5
bindsym $mod+Shift+z gaps outer current minus 5

# wayland version
for_window [app_id="firefox"] inhibit_idle fullscreen
# inhibit swayidle in fullscreen ff xwayland version
for_window [class="Firefox"] inhibit_idle fullscreen

for_window [class="^foot"] opacity 0.7
# for_window [class="^Emacs$"] opacity 0.95

# add X or wayland session to title
for_window [shell=".*"] title_format "%title :: %shell"

# exec waybar
exec_always kanshi

include /etc/sway/config.d/*
exec "systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP"
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
